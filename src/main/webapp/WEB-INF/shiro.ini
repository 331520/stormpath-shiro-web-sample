#
# Copyright (c) 2012 Stormpath, Inc. and contributors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# INI configuration is very powerful and flexible, while still remaining succinct.
# Please http://shiro.apache.org/configuration.html and
# http://shiro.apache.org/web.html for more.

[main]
shiro.loginUrl = /login.jsp

# Let's use some in-memory caching to reduce the number of runtime lookups against Stormpath.  A real
# application might want to use a more robust caching solution (e.g. ehcache or a distributed cache).  When using such
# caches, be aware of your cache TTL settings: too high a TTL and the cache won't reflect any potential
# changes in Stormpath fast enough.  Too low and the cache could evict too often, reducing performance.
#cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
#securityManager.cacheManager = $cacheManager


# Now integrate with Stormpath:

stormpathClient = com.stormpath.shiro.client.ClientFactory
#stormpathClient.cacheManager = $cacheManager
#
# This apiKey is assigned to an Account in your Stormpath tenant's 'Stormpath Administrators' Directory as shown here:
#
#    http://www.stormpath.com/docs/quickstart/connect
#
stormpathClient.apiKeyFileLocation = /Users/mario/.stormpath/apiKey.properties

stormpathRealm = com.stormpath.shiro.realm.ApplicationRealm
stormpathRealm.client = $stormpathClient
# Find this URL in your Stormpath console for an application you create:
# Applications -> (choose application name) --> Details: REST URL
stormpathRealm.applicationRestUrl = https://api.stormpath.com/v1/applications/3TqbyZ1qo74eDM4gTo2H94
stormpathRealm.authenticationCachingEnabled = true
securityManager.realm = $stormpathRealm


#### SSO Start ####

# Cache for single sign on
#ehCacheFactory = de.versatec.mongo.shiro.EhCacheFactory
cacheManager = org.apache.shiro.cache.ehcache.EhCacheManager
#ssoCacheManager.cacheManagerConfigFile = ehcache.xml
cacheManager.cacheManagerConfigFile = classpath:ehcache.xml
#cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
#ssoCacheManager.cacheManager = $ehCacheFactory
#securityManager.cacheManager = $ssoCacheManager
securityManager.cacheManager = $cacheManager

# DAO for single sign on
sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO

;sessionDAO.cacheManager = $ssoCacheManager

#Use DefaultWebSessionManager session manager
#sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager

#securityManager.sessionManager.sessionIdCookieEnabled = true
#securityManager.sessionManager.sessionIdCookie.domain = localhost

# native for single sign on
securityManager.sessionMode = native

#cookie for single sign on
#cookie = org.apache.shiro.web.servlet.SimpleCookie
cookie = com.stormpath.shiro.cookie.MyCookie
#cookie.name = JSESSIONID
cookie.name = SSOcookie
cookie.path = /
#cookie.path = /manager/
#cookie.secure = true
cookie.domain = localhost
#cookie.domain = 192.168.0.100
#cookie.domain = mbp.local
#cookie.domain = 0:0:0:0:0:0:0:1
#securityManager.sessionManager.sessionIdCookie = $cookie

#sessionManager = com.stormpath.shiro.session.MyWebSessionManager
sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
sessionManager.sessionIdCookie = $cookie
securityManager.sessionManager = $sessionManager
sessionManager.sessionDAO = $sessionDAO
#securityManager.sessionManager.sessionDAO = $sessionDAO


#### SSO End ####


[urls]
# The /login.jsp is not restricted to authenticated users (otherwise no one could log in!), but
# the 'authc' filter must still be specified for it so it can process that url's
# login submissions. It is 'smart' enough to allow those requests through as specified by the
# shiro.loginUrl above.
/login.jsp = authc
/logout = logout
/account/** = authc